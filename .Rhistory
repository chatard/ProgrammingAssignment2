getwd()
source('~/Github/ProgrammingAssignment2/cachematrix.R')
source('~/Github/ProgrammingAssignment2/cachematrix.R')
search()
search(globalenv())
search(globalenv)
search(GlobalEnv)
ls(environment(funs$set))
search()
source('~/Github/ProgrammingAssignment2/cachematrix.R')
search()
search()
makeCacheMatrix(c(1, 4, 6, 8), nrow = 2, ncol = 2, byrow = TRUE)
makeCacheMatrix(c(1, 4, 6, 8))
source('~/Github/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c(1, 3, 6, 8))
makeCacheMatrix(c(1, 4, 6, 8), nrow = 2, ncol = 2, byrow = TRUE)
source('~/Github/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c(1, 4, 6, 8), nrow = 2, ncol = 2, byrow = TRUE)
makeCacheMatrix(c(1, 3, 6, 8))
mym<-makeCacheMatrix(c(1, 3, 6, 8))
mym
Inv(mym)
cacheSolve(mym)
mym<-matrix(c(1, 4, 6, 8), nrow = 2, ncol = 2, byrow = TRUE)
setInverse(mym)
inverse(mym)
inv(mym)
$setInverse
setInverse
inv
inverse
source('~/Github/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c(1, 4, 6, 8), nrow = 2, ncol = 2, byrow = TRUE)
makeCacheMatrix(c(1, 4, 6, 8))
source('~/Github/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c(1, 4, 6, 8))
source('~/Github/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c(1, 4, 6, 8))
makeCacheMatrix(c(1, 4, 6, 8))
makeCacheMatrix(1:9,3,3)
makeCacheMatrix(1:9)
mym<-makeCacheMatrix(1:9)
mym
solve(mym)
class(mym)
typeof(mym)
source('~/Github/ProgrammingAssignment2/cachematrix.R')
mym<-makeCacheMatrix(1:9)
mym
class(mym)
typeof(mym)
